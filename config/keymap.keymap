#define ZMK_POINTING_DEFAULT_MOVE_VAL 800
#define ZMK_POINTING_DEFAULT_SCRL_VAL 120

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define SCROLL_FAST 5
#define SCROLL_NORMAL 6
#define SCROLL_SLOW 7

&mmv {
    delay-ms = <0>;
    trigger-period-ms = <10>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <1>;
};

&msc {
    delay-ms = <0>;
    trigger-period-ms = <10>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };

        zip_hwheel_scaler: zip_hwheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_HWHEEL>;
            track-remainders;
        };

        zip_wheel_scaler_normal: zip_wheel_scaler_normal {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };

        zip_hwheel_scaler_normal: zip_hwheel_scaler_normal {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_HWHEEL>;
            track-remainders;
        };

        zip_wheel_scaler_slow: zip_wheel_scaler_slow {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };

        zip_hwheel_scaler_slow: zip_hwheel_scaler_slow {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_HWHEEL>;
            track-remainders;
        };
    };

    behaviors {
        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Windows {
            bindings = <&to 1>;
            key-positions = <42 16>;
            layers = <0 1>;
        };

        Mac {
            bindings = <&to 0>;
            key-positions = <42 51>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESCAPE      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp N5     &kp LEFT_BRACKET                                   &kp LEFT_BRACKET       &kp NUMBER_6  &kp N7     &kp N8       &kp N9      &kp N0                 &kp NON_US_BACKSLASH
&kp TAB         &kp Q         &kp W         &kp E         &kp R             &kp T      &kp RIGHT_BRACKET                                  &kp RIGHT_BRACKET      &kp Y         &kp U      &kp I        &kp O       &kp P                  &kp BACKSPACE
&kp LCTRL       &kp A         &kp S         &kp D         &kp F             &kp G      &kp SQT                                            &kp MINUS              &kp H         &kp J      &kp K        &kp L       &lt 3 SEMICOLON        &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V             &kp B      &kp MINUS                                          &mt RIGHT_SHIFT EQUAL  &kp N         &kp M      &lt 7 COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH  &lt 2 SQT
                                                          &kp LEFT_COMMAND  &kp SPACE  &kp EQUAL          &lt 3 LS(GRAVE)  &kp BACKSPACE  &kp ENTER                            &mkp LCLK  &mkp MCLK    &mkp RCLK
                                                                                       &kp BACKSPACE      &kp ENTER        &kp SPACE      &kp RIGHT_COMMAND
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans                                  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans                                  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans                                  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans                                  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                &mt LCTRL INT_MUHENKAN  &trans  &trans                  &trans  &trans  &trans                  &trans  &trans  &trans
                                                                &mt LEFT_WIN BACKSPACE  &trans  &trans  &kp INT_HENKAN
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1    &kp F2        &kp F3          &kp F4           &kp F5  &trans                  &trans  &kp F6  &kp F7        &kp F8          &kp F9          &kp F10          &kp F11
&trans  &trans    &bt BT_SEL 1  &kp UP_ARROW    &kp UP_ARROW     &trans  &trans                  &trans  &trans  &trans        &trans          &kp UP_ARROW    &kp UP_ARROW     &trans
&trans  &kp HOME  &kp END       &kp LEFT_ARROW  &kp RIGHT_ARROW  &trans  &trans                  &trans  &trans  &trans        &trans          &kp LEFT_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans    &trans        &kp DOWN_ARROW  &kp DOWN_ARROW   &trans  &trans                  &trans  &trans  &bt BT_SEL 0  &msc SCRL_UP    &kp DOWN_ARROW  &kp DOWN_ARROW   &trans
                                                &trans           &trans  &trans  &trans  &trans  &trans          &trans        &msc SCRL_DOWN  &trans
                                                                         &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &kp N7        &kp N8           &kp N9                        &kp N7        &kp N8        &kp N9        &kp PLUS      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp NUMBER_4  &kp N5           &kp NUMBER_6                  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3                  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp N0        &kp KP_NUMBER_0  &kp PERIOD                    &kp N0        &kp N0        &kp PERIOD    &kp SLASH     &trans  &trans  &trans
                                &kp PLUS      &kp MINUS        &kp STAR      &trans  &trans  &trans                      &trans        &trans        &trans
                                                               &kp SLASH     &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none  &none
                            &none  &none  &none  &none  &none  &none         &none  &none  &none
                                          &none  &none  &none  &none
            >;
        };

        scroll_fast_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
                            &mo 7  &mo 6  &trans  &none  &none  &trans         &mo 6  &mo 7  &none
                                          &none   &none  &none  &none
            >;
        };

        scroll_normal_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
                            &mo 7  &mo 5  &trans  &none  &none  &trans         &mo 5  &mo 7  &none
                                          &none   &none  &none  &none
            >;
        };

        scroll_slow_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none                 &none   &none  &none  &none  &none  &none  &none
                            &mo 6  &mo 5  &trans  &none  &none  &trans         &mo 5  &mo 6  &none
                                          &none   &none  &none  &none
            >;
        };
    };
};
